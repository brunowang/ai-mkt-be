syntax = "proto3";

package filmclip.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "ai-mkt-be/api/filmclip/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.filmclip.v1";
option java_outer_classname = "FilmclipProtoV1";

service Filmclip {

  rpc CreatePlan (CreatePlanRequest) returns (CreatePlanReply) {
    option (google.api.http) = {
      post: "/project/plan/create",
      body: "*",
    };
  }

  rpc ListPlan (ListPlanRequest) returns (ListPlanReply) {
    option (google.api.http) = {
      post: "/project/plan/list",
      body: "*",
    };
  }

  rpc QueryPlan (QueryPlanRequest) returns (QueryPlanReply) {
    option (google.api.http) = {
      post: "/project/plan/query",
      body: "*",
    };
  }

  rpc UploadImage (UploadImageRequest) returns (UploadImageReply) {
    option (google.api.http) = {
      post: "/asset/image/upload",
      body: "*",
    };
  }

  rpc ChangeClothing (ChangeClothingRequest) returns (ChangeClothingReply) {
    option (google.api.http) = {
      post: "/asset/image/change_clothing",
      body: "*",
    };
  }

  rpc GenClipScript (GenClipScriptRequest) returns (GenClipScriptReply) {
    option (google.api.http) = {
      post: "/clip/script/generate",
      body: "*",
    };
  }

  rpc GenClipFirstFrame (GenClipFrameRequest) returns (GenClipFrameReply) {
    option (google.api.http) = {
      post: "/clip/frame/generate",
      body: "*",
    };
  }

  rpc GenClipVideo (GenClipVideoRequest) returns (GenClipVideoReply) {
    option (google.api.http) = {
      post: "/clip/video/generate",
      body: "*",
    };
  }

}

message CreatePlanRequest {
  string user_id = 1 [(validate.rules).string.min_len = 1];
  string name = 2 [(validate.rules).string.min_len = 1];
}

message CreatePlanReply {
  string plan_id = 1;
}

message ListPlanRequest {
  string user_id = 1 [(validate.rules).string.min_len = 1];
}

message ListPlanReply {
  repeated PlanInfo list = 1;
}

message QueryPlanRequest {
  string plan_id = 1 [(validate.rules).string.min_len = 1];
}

message QueryPlanReply {
  PlanDetail plan = 1;
}

message PlanInfo {
  string plan_id = 1;
  string name = 2;
  int32 step = 3;
}

message PlanDetail {
  string plan_id = 1;
  string name = 2;
  int32 step = 3;
  map<string, string> images = 4;
  string prompt = 5;
  repeated SceneScript scenes = 6;
  map<string, string> clip_frames = 7;
  map<string, string> clip_videos = 8;
}

message UploadImageRequest {
  enum ImageType {
    Unknown = 0;
    Cloth = 1;
    Human = 2;
  }
  ImageType type = 1 [(validate.rules).enum.defined_only = true];
  string plan_id = 2 [(validate.rules).string.min_len = 1];
  string name = 3 [(validate.rules).string.min_len = 1];
  string base64 = 4 [(validate.rules).string.min_len = 1];
}

message UploadImageReply {
  string url = 1;
}

message ChangeClothingRequest {
  string plan_id = 1 [(validate.rules).string.min_len = 1];
  string cloth_image = 2 [(validate.rules).string.min_len = 1];
  string human_image = 3 [(validate.rules).string.min_len = 1];
}

message ChangeClothingReply {
  repeated string image_url = 1;
}

message GenClipScriptRequest {
  string plan_id = 1 [(validate.rules).string.min_len = 1];
  string actor_image = 2 [(validate.rules).string.min_len = 1];
  string prompt = 3;
}

message GenClipScriptReply {
  repeated SceneScript scenes = 1;
}

message SceneScript {
  string sequence = 1;
  string description = 2;
  string actions = 3;
  string shot_type = 4;
}

message GenClipFrameRequest {
  string plan_id = 1 [(validate.rules).string.min_len = 1];
  repeated string scenes = 2 [(validate.rules).repeated.min_items = 1];
}

message GenClipFrameReply {
  repeated string image_url = 1;
}

message GenClipVideoRequest {
  string plan_id = 1 [(validate.rules).string.min_len = 1];
  repeated string scenes = 2 [(validate.rules).repeated.min_items = 1];
}

message GenClipVideoReply {
  repeated string video_url = 1;
}

enum Intent {
  // 默认直接调用LLM
  Default = 0;
  // 自动识别意图
  AutoClassify = 1;
  // 生成分镜脚本
  GenClipScript = 2;
}
