// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: filmclip/v1/filmclip.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Intent int32

const (
	// 默认直接调用LLM
	Intent_Default Intent = 0
	// 自动识别意图
	Intent_AutoClassify Intent = 1
	// 生成分镜脚本
	Intent_GenClipScript Intent = 2
)

// Enum value maps for Intent.
var (
	Intent_name = map[int32]string{
		0: "Default",
		1: "AutoClassify",
		2: "GenClipScript",
	}
	Intent_value = map[string]int32{
		"Default":       0,
		"AutoClassify":  1,
		"GenClipScript": 2,
	}
)

func (x Intent) Enum() *Intent {
	p := new(Intent)
	*p = x
	return p
}

func (x Intent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Intent) Descriptor() protoreflect.EnumDescriptor {
	return file_filmclip_v1_filmclip_proto_enumTypes[0].Descriptor()
}

func (Intent) Type() protoreflect.EnumType {
	return &file_filmclip_v1_filmclip_proto_enumTypes[0]
}

func (x Intent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Intent.Descriptor instead.
func (Intent) EnumDescriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{0}
}

type UploadImageRequest_ImageType int32

const (
	UploadImageRequest_Unknown UploadImageRequest_ImageType = 0
	UploadImageRequest_Cloth   UploadImageRequest_ImageType = 1
	UploadImageRequest_Human   UploadImageRequest_ImageType = 2
)

// Enum value maps for UploadImageRequest_ImageType.
var (
	UploadImageRequest_ImageType_name = map[int32]string{
		0: "Unknown",
		1: "Cloth",
		2: "Human",
	}
	UploadImageRequest_ImageType_value = map[string]int32{
		"Unknown": 0,
		"Cloth":   1,
		"Human":   2,
	}
)

func (x UploadImageRequest_ImageType) Enum() *UploadImageRequest_ImageType {
	p := new(UploadImageRequest_ImageType)
	*p = x
	return p
}

func (x UploadImageRequest_ImageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UploadImageRequest_ImageType) Descriptor() protoreflect.EnumDescriptor {
	return file_filmclip_v1_filmclip_proto_enumTypes[1].Descriptor()
}

func (UploadImageRequest_ImageType) Type() protoreflect.EnumType {
	return &file_filmclip_v1_filmclip_proto_enumTypes[1]
}

func (x UploadImageRequest_ImageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UploadImageRequest_ImageType.Descriptor instead.
func (UploadImageRequest_ImageType) EnumDescriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{8, 0}
}

type CreatePlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreatePlanRequest) Reset() {
	*x = CreatePlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanRequest) ProtoMessage() {}

func (x *CreatePlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanRequest.ProtoReflect.Descriptor instead.
func (*CreatePlanRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePlanRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreatePlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *CreatePlanReply) Reset() {
	*x = CreatePlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlanReply) ProtoMessage() {}

func (x *CreatePlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlanReply.ProtoReflect.Descriptor instead.
func (*CreatePlanReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePlanReply) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type ListPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *ListPlanRequest) Reset() {
	*x = ListPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanRequest) ProtoMessage() {}

func (x *ListPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanRequest.ProtoReflect.Descriptor instead.
func (*ListPlanRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{2}
}

func (x *ListPlanRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type ListPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*PlanInfo `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ListPlanReply) Reset() {
	*x = ListPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPlanReply) ProtoMessage() {}

func (x *ListPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPlanReply.ProtoReflect.Descriptor instead.
func (*ListPlanReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{3}
}

func (x *ListPlanReply) GetList() []*PlanInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type QueryPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *QueryPlanRequest) Reset() {
	*x = QueryPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlanRequest) ProtoMessage() {}

func (x *QueryPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlanRequest.ProtoReflect.Descriptor instead.
func (*QueryPlanRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{4}
}

func (x *QueryPlanRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type QueryPlanReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plan *PlanDetail `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
}

func (x *QueryPlanReply) Reset() {
	*x = QueryPlanReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlanReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlanReply) ProtoMessage() {}

func (x *QueryPlanReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlanReply.ProtoReflect.Descriptor instead.
func (*QueryPlanReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{5}
}

func (x *QueryPlanReply) GetPlan() *PlanDetail {
	if x != nil {
		return x.Plan
	}
	return nil
}

type PlanInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Step   int32  `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
}

func (x *PlanInfo) Reset() {
	*x = PlanInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanInfo) ProtoMessage() {}

func (x *PlanInfo) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanInfo.ProtoReflect.Descriptor instead.
func (*PlanInfo) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{6}
}

func (x *PlanInfo) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *PlanInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlanInfo) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

type PlanDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId     string            `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Name       string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Step       int32             `protobuf:"varint,3,opt,name=step,proto3" json:"step,omitempty"`
	Images     map[string]string `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Prompt     string            `protobuf:"bytes,5,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Scenes     []*SceneScript    `protobuf:"bytes,6,rep,name=scenes,proto3" json:"scenes,omitempty"`
	ClipFrames map[string]string `protobuf:"bytes,7,rep,name=clip_frames,json=clipFrames,proto3" json:"clip_frames,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ClipVideos map[string]string `protobuf:"bytes,8,rep,name=clip_videos,json=clipVideos,proto3" json:"clip_videos,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PlanDetail) Reset() {
	*x = PlanDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanDetail) ProtoMessage() {}

func (x *PlanDetail) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanDetail.ProtoReflect.Descriptor instead.
func (*PlanDetail) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{7}
}

func (x *PlanDetail) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *PlanDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PlanDetail) GetStep() int32 {
	if x != nil {
		return x.Step
	}
	return 0
}

func (x *PlanDetail) GetImages() map[string]string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *PlanDetail) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *PlanDetail) GetScenes() []*SceneScript {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *PlanDetail) GetClipFrames() map[string]string {
	if x != nil {
		return x.ClipFrames
	}
	return nil
}

func (x *PlanDetail) GetClipVideos() map[string]string {
	if x != nil {
		return x.ClipVideos
	}
	return nil
}

type UploadImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   UploadImageRequest_ImageType `protobuf:"varint,1,opt,name=type,proto3,enum=filmclip.v1.UploadImageRequest_ImageType" json:"type,omitempty"`
	PlanId string                       `protobuf:"bytes,2,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Name   string                       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Base64 string                       `protobuf:"bytes,4,opt,name=base64,proto3" json:"base64,omitempty"`
}

func (x *UploadImageRequest) Reset() {
	*x = UploadImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageRequest) ProtoMessage() {}

func (x *UploadImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageRequest.ProtoReflect.Descriptor instead.
func (*UploadImageRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{8}
}

func (x *UploadImageRequest) GetType() UploadImageRequest_ImageType {
	if x != nil {
		return x.Type
	}
	return UploadImageRequest_Unknown
}

func (x *UploadImageRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *UploadImageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UploadImageRequest) GetBase64() string {
	if x != nil {
		return x.Base64
	}
	return ""
}

type UploadImageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *UploadImageReply) Reset() {
	*x = UploadImageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadImageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadImageReply) ProtoMessage() {}

func (x *UploadImageReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadImageReply.ProtoReflect.Descriptor instead.
func (*UploadImageReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{9}
}

func (x *UploadImageReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type ChangeClothingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId     string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	ClothImage string `protobuf:"bytes,2,opt,name=cloth_image,json=clothImage,proto3" json:"cloth_image,omitempty"`
	HumanImage string `protobuf:"bytes,3,opt,name=human_image,json=humanImage,proto3" json:"human_image,omitempty"`
}

func (x *ChangeClothingRequest) Reset() {
	*x = ChangeClothingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeClothingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeClothingRequest) ProtoMessage() {}

func (x *ChangeClothingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeClothingRequest.ProtoReflect.Descriptor instead.
func (*ChangeClothingRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeClothingRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *ChangeClothingRequest) GetClothImage() string {
	if x != nil {
		return x.ClothImage
	}
	return ""
}

func (x *ChangeClothingRequest) GetHumanImage() string {
	if x != nil {
		return x.HumanImage
	}
	return ""
}

type ChangeClothingReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl []string `protobuf:"bytes,1,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *ChangeClothingReply) Reset() {
	*x = ChangeClothingReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeClothingReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeClothingReply) ProtoMessage() {}

func (x *ChangeClothingReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeClothingReply.ProtoReflect.Descriptor instead.
func (*ChangeClothingReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{11}
}

func (x *ChangeClothingReply) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

type GenClipScriptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId     string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	ActorImage string `protobuf:"bytes,2,opt,name=actor_image,json=actorImage,proto3" json:"actor_image,omitempty"`
	Prompt     string `protobuf:"bytes,3,opt,name=prompt,proto3" json:"prompt,omitempty"`
}

func (x *GenClipScriptRequest) Reset() {
	*x = GenClipScriptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenClipScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenClipScriptRequest) ProtoMessage() {}

func (x *GenClipScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenClipScriptRequest.ProtoReflect.Descriptor instead.
func (*GenClipScriptRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{12}
}

func (x *GenClipScriptRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *GenClipScriptRequest) GetActorImage() string {
	if x != nil {
		return x.ActorImage
	}
	return ""
}

func (x *GenClipScriptRequest) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

type GenClipScriptReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scenes []*SceneScript `protobuf:"bytes,1,rep,name=scenes,proto3" json:"scenes,omitempty"`
}

func (x *GenClipScriptReply) Reset() {
	*x = GenClipScriptReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenClipScriptReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenClipScriptReply) ProtoMessage() {}

func (x *GenClipScriptReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenClipScriptReply.ProtoReflect.Descriptor instead.
func (*GenClipScriptReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{13}
}

func (x *GenClipScriptReply) GetScenes() []*SceneScript {
	if x != nil {
		return x.Scenes
	}
	return nil
}

type SceneScript struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence    string `protobuf:"bytes,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Actions     string `protobuf:"bytes,3,opt,name=actions,proto3" json:"actions,omitempty"`
	ShotType    string `protobuf:"bytes,4,opt,name=shot_type,json=shotType,proto3" json:"shot_type,omitempty"`
}

func (x *SceneScript) Reset() {
	*x = SceneScript{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneScript) ProtoMessage() {}

func (x *SceneScript) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneScript.ProtoReflect.Descriptor instead.
func (*SceneScript) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{14}
}

func (x *SceneScript) GetSequence() string {
	if x != nil {
		return x.Sequence
	}
	return ""
}

func (x *SceneScript) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SceneScript) GetActions() string {
	if x != nil {
		return x.Actions
	}
	return ""
}

func (x *SceneScript) GetShotType() string {
	if x != nil {
		return x.ShotType
	}
	return ""
}

type GenClipFrameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string   `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Scenes []string `protobuf:"bytes,2,rep,name=scenes,proto3" json:"scenes,omitempty"`
}

func (x *GenClipFrameRequest) Reset() {
	*x = GenClipFrameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenClipFrameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenClipFrameRequest) ProtoMessage() {}

func (x *GenClipFrameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenClipFrameRequest.ProtoReflect.Descriptor instead.
func (*GenClipFrameRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{15}
}

func (x *GenClipFrameRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *GenClipFrameRequest) GetScenes() []string {
	if x != nil {
		return x.Scenes
	}
	return nil
}

type GenClipFrameReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl []string `protobuf:"bytes,1,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *GenClipFrameReply) Reset() {
	*x = GenClipFrameReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenClipFrameReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenClipFrameReply) ProtoMessage() {}

func (x *GenClipFrameReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenClipFrameReply.ProtoReflect.Descriptor instead.
func (*GenClipFrameReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{16}
}

func (x *GenClipFrameReply) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

type GenClipVideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string   `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Scenes []string `protobuf:"bytes,2,rep,name=scenes,proto3" json:"scenes,omitempty"`
}

func (x *GenClipVideoRequest) Reset() {
	*x = GenClipVideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenClipVideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenClipVideoRequest) ProtoMessage() {}

func (x *GenClipVideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenClipVideoRequest.ProtoReflect.Descriptor instead.
func (*GenClipVideoRequest) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{17}
}

func (x *GenClipVideoRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *GenClipVideoRequest) GetScenes() []string {
	if x != nil {
		return x.Scenes
	}
	return nil
}

type GenClipVideoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUrl []string `protobuf:"bytes,1,rep,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *GenClipVideoReply) Reset() {
	*x = GenClipVideoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_filmclip_v1_filmclip_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenClipVideoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenClipVideoReply) ProtoMessage() {}

func (x *GenClipVideoReply) ProtoReflect() protoreflect.Message {
	mi := &file_filmclip_v1_filmclip_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenClipVideoReply.ProtoReflect.Descriptor instead.
func (*GenClipVideoReply) Descriptor() ([]byte, []int) {
	return file_filmclip_v1_filmclip_proto_rawDescGZIP(), []int{18}
}

func (x *GenClipVideoReply) GetVideoUrl() []string {
	if x != nil {
		return x.VideoUrl
	}
	return nil
}

var File_filmclip_v1_filmclip_proto protoreflect.FileDescriptor

var file_filmclip_v1_filmclip_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x66, 0x69,
	0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x30, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x33,
	0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x34, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70,
	0x6c, 0x61, 0x6e, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2b, 0x0a, 0x04, 0x70, 0x6c, 0x61, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x04,
	0x70, 0x6c, 0x61, 0x6e, 0x22, 0x4b, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x22, 0xa1, 0x04, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x74, 0x65, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x3b, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x70,
	0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x70, 0x46, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x48, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x2e, 0x43, 0x6c, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x63, 0x6c, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x1a, 0x39, 0x0a, 0x0b,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x70, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3d, 0x0a, 0x0f, 0x43, 0x6c, 0x69, 0x70, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x66, 0x69, 0x6c,
	0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x62,
	0x61, 0x73, 0x65, 0x36, 0x34, 0x22, 0x2e, 0x0a, 0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x09, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x75,
	0x6d, 0x61, 0x6e, 0x10, 0x02, 0x22, 0x24, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x15,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x74, 0x68,
	0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x28, 0x0a, 0x0b, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x0a, 0x68, 0x75, 0x6d, 0x61, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0x7a, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x61, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x46, 0x0a, 0x12, 0x47,
	0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x06, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x73, 0x22, 0x82, 0x01, 0x0a, 0x0b, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x68, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x68, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x43,
	0x6c, 0x69, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x73, 0x63, 0x65,
	0x6e, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x59, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x07,
	0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x73,
	0x22, 0x30, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55,
	0x72, 0x6c, 0x2a, 0x3a, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x75, 0x74,
	0x6f, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x47,
	0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x10, 0x02, 0x32, 0x97,
	0x07, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x12, 0x6b, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1e, 0x2e, 0x66, 0x69, 0x6c, 0x6d,
	0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x6d,
	0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a,
	0x01, 0x2a, 0x22, 0x14, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61,
	0x6e, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x63, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1c, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x67, 0x0a,
	0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x1d, 0x2e, 0x66, 0x69, 0x6c,
	0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c,
	0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x66, 0x69, 0x6c, 0x6d,
	0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01,
	0x2a, 0x22, 0x13, 0x2f, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x70, 0x6c, 0x61, 0x6e,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x6d, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69,
	0x70, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a,
	0x22, 0x13, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x7f, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43,
	0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74,
	0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66, 0x69,
	0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x43, 0x6c, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x27, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x2f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x63, 0x6c,
	0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x75, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69,
	0x70, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x21, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x53, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66, 0x69, 0x6c,
	0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70,
	0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x2f, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x76, 0x0a,
	0x11, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x69, 0x72, 0x73, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22,
	0x14, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x2f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x12, 0x71, 0x0a, 0x0c, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x20, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c,
	0x69, 0x70, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x6e, 0x43, 0x6c, 0x69, 0x70, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a,
	0x01, 0x2a, 0x22, 0x14, 0x2f, 0x63, 0x6c, 0x69, 0x70, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x42, 0x4d, 0x0a, 0x1a, 0x64, 0x65, 0x76, 0x2e,
	0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x6d, 0x63,
	0x6c, 0x69, 0x70, 0x2e, 0x76, 0x31, 0x42, 0x0f, 0x46, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69, 0x70,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x1c, 0x61, 0x69, 0x2d, 0x6d, 0x6b,
	0x74, 0x2d, 0x62, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x6d, 0x63, 0x6c, 0x69,
	0x70, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_filmclip_v1_filmclip_proto_rawDescOnce sync.Once
	file_filmclip_v1_filmclip_proto_rawDescData = file_filmclip_v1_filmclip_proto_rawDesc
)

func file_filmclip_v1_filmclip_proto_rawDescGZIP() []byte {
	file_filmclip_v1_filmclip_proto_rawDescOnce.Do(func() {
		file_filmclip_v1_filmclip_proto_rawDescData = protoimpl.X.CompressGZIP(file_filmclip_v1_filmclip_proto_rawDescData)
	})
	return file_filmclip_v1_filmclip_proto_rawDescData
}

var file_filmclip_v1_filmclip_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_filmclip_v1_filmclip_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_filmclip_v1_filmclip_proto_goTypes = []any{
	(Intent)(0),                       // 0: filmclip.v1.Intent
	(UploadImageRequest_ImageType)(0), // 1: filmclip.v1.UploadImageRequest.ImageType
	(*CreatePlanRequest)(nil),         // 2: filmclip.v1.CreatePlanRequest
	(*CreatePlanReply)(nil),           // 3: filmclip.v1.CreatePlanReply
	(*ListPlanRequest)(nil),           // 4: filmclip.v1.ListPlanRequest
	(*ListPlanReply)(nil),             // 5: filmclip.v1.ListPlanReply
	(*QueryPlanRequest)(nil),          // 6: filmclip.v1.QueryPlanRequest
	(*QueryPlanReply)(nil),            // 7: filmclip.v1.QueryPlanReply
	(*PlanInfo)(nil),                  // 8: filmclip.v1.PlanInfo
	(*PlanDetail)(nil),                // 9: filmclip.v1.PlanDetail
	(*UploadImageRequest)(nil),        // 10: filmclip.v1.UploadImageRequest
	(*UploadImageReply)(nil),          // 11: filmclip.v1.UploadImageReply
	(*ChangeClothingRequest)(nil),     // 12: filmclip.v1.ChangeClothingRequest
	(*ChangeClothingReply)(nil),       // 13: filmclip.v1.ChangeClothingReply
	(*GenClipScriptRequest)(nil),      // 14: filmclip.v1.GenClipScriptRequest
	(*GenClipScriptReply)(nil),        // 15: filmclip.v1.GenClipScriptReply
	(*SceneScript)(nil),               // 16: filmclip.v1.SceneScript
	(*GenClipFrameRequest)(nil),       // 17: filmclip.v1.GenClipFrameRequest
	(*GenClipFrameReply)(nil),         // 18: filmclip.v1.GenClipFrameReply
	(*GenClipVideoRequest)(nil),       // 19: filmclip.v1.GenClipVideoRequest
	(*GenClipVideoReply)(nil),         // 20: filmclip.v1.GenClipVideoReply
	nil,                               // 21: filmclip.v1.PlanDetail.ImagesEntry
	nil,                               // 22: filmclip.v1.PlanDetail.ClipFramesEntry
	nil,                               // 23: filmclip.v1.PlanDetail.ClipVideosEntry
}
var file_filmclip_v1_filmclip_proto_depIdxs = []int32{
	8,  // 0: filmclip.v1.ListPlanReply.list:type_name -> filmclip.v1.PlanInfo
	9,  // 1: filmclip.v1.QueryPlanReply.plan:type_name -> filmclip.v1.PlanDetail
	21, // 2: filmclip.v1.PlanDetail.images:type_name -> filmclip.v1.PlanDetail.ImagesEntry
	16, // 3: filmclip.v1.PlanDetail.scenes:type_name -> filmclip.v1.SceneScript
	22, // 4: filmclip.v1.PlanDetail.clip_frames:type_name -> filmclip.v1.PlanDetail.ClipFramesEntry
	23, // 5: filmclip.v1.PlanDetail.clip_videos:type_name -> filmclip.v1.PlanDetail.ClipVideosEntry
	1,  // 6: filmclip.v1.UploadImageRequest.type:type_name -> filmclip.v1.UploadImageRequest.ImageType
	16, // 7: filmclip.v1.GenClipScriptReply.scenes:type_name -> filmclip.v1.SceneScript
	2,  // 8: filmclip.v1.Filmclip.CreatePlan:input_type -> filmclip.v1.CreatePlanRequest
	4,  // 9: filmclip.v1.Filmclip.ListPlan:input_type -> filmclip.v1.ListPlanRequest
	6,  // 10: filmclip.v1.Filmclip.QueryPlan:input_type -> filmclip.v1.QueryPlanRequest
	10, // 11: filmclip.v1.Filmclip.UploadImage:input_type -> filmclip.v1.UploadImageRequest
	12, // 12: filmclip.v1.Filmclip.ChangeClothing:input_type -> filmclip.v1.ChangeClothingRequest
	14, // 13: filmclip.v1.Filmclip.GenClipScript:input_type -> filmclip.v1.GenClipScriptRequest
	17, // 14: filmclip.v1.Filmclip.GenClipFirstFrame:input_type -> filmclip.v1.GenClipFrameRequest
	19, // 15: filmclip.v1.Filmclip.GenClipVideo:input_type -> filmclip.v1.GenClipVideoRequest
	3,  // 16: filmclip.v1.Filmclip.CreatePlan:output_type -> filmclip.v1.CreatePlanReply
	5,  // 17: filmclip.v1.Filmclip.ListPlan:output_type -> filmclip.v1.ListPlanReply
	7,  // 18: filmclip.v1.Filmclip.QueryPlan:output_type -> filmclip.v1.QueryPlanReply
	11, // 19: filmclip.v1.Filmclip.UploadImage:output_type -> filmclip.v1.UploadImageReply
	13, // 20: filmclip.v1.Filmclip.ChangeClothing:output_type -> filmclip.v1.ChangeClothingReply
	15, // 21: filmclip.v1.Filmclip.GenClipScript:output_type -> filmclip.v1.GenClipScriptReply
	18, // 22: filmclip.v1.Filmclip.GenClipFirstFrame:output_type -> filmclip.v1.GenClipFrameReply
	20, // 23: filmclip.v1.Filmclip.GenClipVideo:output_type -> filmclip.v1.GenClipVideoReply
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_filmclip_v1_filmclip_proto_init() }
func file_filmclip_v1_filmclip_proto_init() {
	if File_filmclip_v1_filmclip_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_filmclip_v1_filmclip_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreatePlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ListPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ListPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*QueryPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*QueryPlanReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PlanInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PlanDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*UploadImageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeClothingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ChangeClothingReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GenClipScriptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GenClipScriptReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*SceneScript); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*GenClipFrameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*GenClipFrameReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*GenClipVideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_filmclip_v1_filmclip_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*GenClipVideoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_filmclip_v1_filmclip_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_filmclip_v1_filmclip_proto_goTypes,
		DependencyIndexes: file_filmclip_v1_filmclip_proto_depIdxs,
		EnumInfos:         file_filmclip_v1_filmclip_proto_enumTypes,
		MessageInfos:      file_filmclip_v1_filmclip_proto_msgTypes,
	}.Build()
	File_filmclip_v1_filmclip_proto = out.File
	file_filmclip_v1_filmclip_proto_rawDesc = nil
	file_filmclip_v1_filmclip_proto_goTypes = nil
	file_filmclip_v1_filmclip_proto_depIdxs = nil
}
